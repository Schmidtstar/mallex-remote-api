
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && request.auth.token.admin == true;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isValidUserUpdate() {
      return request.resource.data.keys().hasOnly([
        'displayName', 'photoURL', 'locale', 'settings', 'preferences'
      ]);
    }

    function isValidPlayerUpdate() {
      return request.resource.data.diff(resource.data).changedKeys().hasOnly([
        'avatar', 'nickname', 'displayName'
      ]);
    }

    // ---- USERS --------------------------------------------------------------
    match /users/{userId} {
      allow create: if isOwner(userId);
      allow read: if isOwner(userId) || isAdmin();
      allow update: if isOwner(userId) && isValidUserUpdate();
      allow write: if isAdmin();
    }

    // ---- ADMINS -------------------------------------------------------------
    match /admins/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isAdmin();
    }

    // ---- TASKS & CATEGORIES ------------------------------------------------
    match /tasks/{taskId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    match /categories/{categoryId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // ---- TASK SUGGESTIONS ---------------------------------------------------
    match /taskSuggestions/{suggestionId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    // ---- USER PROGRESS ------------------------------------------------------
    match /userProgress/{userId} {
      allow read, create, update: if isOwner(userId);
      allow write: if isAdmin();
    }

    // ---- PLAYERS (Leaderboard) ---------------------------------------------
    match /players/{playerId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(playerId);
      allow update: if isOwner(playerId) && isValidPlayerUpdate();
      allow write: if isAdmin();
    }

    // ---- SETTINGS & NOTIFICATIONS -------------------------------------------
    match /settings/{settingId} {
      allow read, write: if isAdmin();
    }
    
    match /publicSettings/{settingId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && 
                  (resource.data.targetUserId == request.auth.uid || isAdmin());
      allow write: if isAdmin();
    }

    match /globalNotifications/{notificationId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // ---- ADMIN-ONLY COLLECTIONS --------------------------------------------
    match /{adminPath=**} {
      allow read, write: if isAdmin() && adminPath in [
        'analytics', 'systemLogs'
      ];
    }

    // Default deny all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
