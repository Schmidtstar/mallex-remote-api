1) i18n zeigt Keys statt Texte
	•	Symptom: menu.profile (de) returned an object instead of string.
	•	Ursache: In de.json/en.json steht an der Stelle ein Objekt oder der Key ist doppelt/verschachtelt.
	•	Fix: Sicherstellen, dass alle angezeigten Labels String-Blätter sind (z. B. "menu": { "profile": "Profil" } – kein weiteres Nesting darunter). Reload nach JSON-Fix.

2) Firebase “duplicate app” / inkonsistente Imports
	•	Symptom: Firebase App named '[DEFAULT]' already exists (vorher) und/ oder „getFirebase not found“; Permission Errors.
	•	Ursache: Mehrfache Initialisierung, gemischte Imports (getFirebase()), nicht zentrale db/auth/app-Exports.
	•	Fix: Nur eine zentrale lib/firebase.ts (HMR-safe getApps().length ? getApp() : initializeApp(...)) und überall konsequent import { db, auth, app } from '@/lib/firebase'. Alte Helper (getFirebase) restlos entfernen.

3) Firestore-Regeln vs. App-Calls
	•	Symptom: permission-denied beim Lesen/Schreiben (Players, Tasks, Suggestions).
	•	Ursache: Regeln erlauben nur bestimmte Pfade/Felder; Code nutzt (noch) andere Pfade oder fehlende Auth.
	•	Fix:
	•	Pfade konsolidieren:
	•	User-Profil: users/{uid}
	•	Spieler: users/{uid}/players/{playerId}
	•	Vorschläge: suggestions/{sid}
	•	Tasks (global): tasks/{tid}
	•	Client-Code angleichen (siehe Punkt 5 und 6).

4) Admin-Erkennung
	•	Symptom: Admin-Menü erscheint nicht immer bzw. unzuverlässig.
	•	Ursache: Abfrage gegen admins/{email} fehlte/war asynchron, oder die Regeln/Abfrage prüften falschen Pfad.
	•	Fix: Beim Auth-Change einmalig getDoc(doc(db,'admins', user.email)) und isAdmin im Context cachen; Loading-State sauber handlen.

5) „Halle der Legenden“ speichert nicht persistent
	•	Symptom: Spieler verschwinden nach Reload oder nur lokal vorhanden.
	•	Ursache: Schreiben/Lesen nicht aus users/{uid}/players/*, teils altes Sammel-Dokument, teils fallback localStorage.
	•	Fix: PlayersContext auf CRUD für Subcollection umstellen:
	•	addPlayer(name) → addDoc(collection(db,'users',uid,'players'), { name, createdAt })
	•	listPlayers() → getDocs(...)/onSnapshot
	•	removePlayer(id) → deleteDoc(...)

6) Aufgaben: Übersicht / Vorschlagen / Admin-Moderation
	•	Symptom: Menü vorhanden, aber Flows teilweise Platzhalter oder Pfade nicht konsistent.
	•	Ursache: Uneinheitliche API: teils tasksApi mit alten Imports/Pfaden, teils direkte Firestore-Calls.
	•	Fix:
	•	Übersicht: collection(db,'tasks') mit Filter status=='approved' und optional hidden==false.
	•	Vorschlagen: addDoc(collection(db,'suggestions'), { category, text, status:'pending', createdBy: uid, createdAt }).
	•	Admin: Moderation in suggestions (approve → kopieren/erstellen in tasks mit status:'approved'; reject → status:'rejected'; optional note). Regeln passen.

7) Logout / Routing
	•	Symptom: Fehlermeldung beim Abmelden oder kein Redirect.
	•	Ursache: signOut(auth) wurde nicht awaited / Navigation vor Context-Reset; fehlende Route-Guards.
	•	Fix: await signOut(auth) → dann navigate('/auth'); Guard leitet unautorisierte Nutzer konsequent zu /auth.

8) Hamburger-Menü in der Tab-Bar
	•	Symptom: Früher doppelt, jetzt integriert; prüfen: State, ESC, Backdrop, Fokus, Body-Scroll-Lock.
	•	Ursache: UI/UX-Details.
	•	Fix: Wir haben schon ESC/Backdrop/Focus ergänzt – bitte noch einmal checken, ob Tab-Reihenfolge und aria-attribute (role=“dialog”, aria-modal=“true”) überall sitzen.

9) Auth Screen UI / Profil-Felder
	•	Symptom: Auth-Labels roh, Formular optisch uneinheitlich; Profil zeigt E-Mail/Name, aber Extras teils leer.
	•	Ursache: i18n-Keys/Styles, fehlender Create-Profile-Hook.
	•	Fix:
	•	i18n-Keys für Auth (Login/Signup/Guest, Field Labels, Errors).
	•	On-login/on-register: setDoc(users/{uid}) (merge) mit displayName,email,createdAt,lastLoginAt.
	•	Optional: BD/Geschlecht/Nationalität speichern und im Profil editierbar machen (haben wir als Konzept vorbereitet).

10) HMR & „star export“/Default-Export-Fallen
	•	Symptom: Historisch: importing binding name 'default' cannot be resolved by star export entries.
	•	Ursache: Barrel-Files/export * + default mischt sich mit named imports.
	•	Fix: Keine Barrel-export *; nur named exports und konsistente Imports. (Scheint größtenteils bereinigt – bitte beibehalten.)