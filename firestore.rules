
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users können ihre eigenen Daten lesen/schreiben
    match /users/{userId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId || 
         exists(/databases/$(database)/documents/admins/$(request.auth.uid)));
    }

    // Admin-Kollektionen - nur für Admins zugänglich
    match /admins/{adminId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // App Settings - nur Admins können lesen/schreiben
    match /appSettings/{settingId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Task Suggestions - Admins können alles, Users nur eigene erstellen
    match /taskSuggestions/{suggestionId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
      allow create: if request.auth != null;
    }

    // Approved Tasks - alle können lesen, nur Admins schreiben
    match /approvedTasks/{taskId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // User Rankings und Statistiken
    match /userStats/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.uid == userId || 
         exists(/databases/$(database)/documents/admins/$(request.auth.uid)));
    }

    // System Notifications
    match /notifications/{notificationId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Leaderboard - alle können lesen
    match /leaderboard/{entry} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
  }
}
