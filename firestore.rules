
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() &&
             exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection - users can manage their own data, admins can read all
    match /users/{userId} {
      allow create: if isAuthenticated();
      allow read, write: if isOwner(userId) || isAdmin();
    }

    // Admins collection - only admins can read/write, users can check their own admin status
    match /admins/{userId} {
      allow read, write: if isAdmin();
      allow read: if isOwner(userId);
    }

    // Tasks collection - read for authenticated users, write for admins only
    match /tasks/{taskId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Task categories and static content
    match /categories/{categoryId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Task suggestions - users can submit and read, admins can moderate
    match /taskSuggestions/{suggestionId} {
      allow read, create: if isAuthenticated();
      allow update, delete: if isAdmin() || 
        (isAuthenticated() && request.auth.uid == resource.data.submittedBy);
    }

    // User progress/points - users own their data
    match /userProgress/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }

    // Players collection - SECURE Arena points system
    // Players can only update their OWN records, but all can read leaderboard
    match /players/{playerId} {
      allow read: if isAuthenticated();
      // SECURE: Only allow creation if the document's userId matches auth.uid
      allow create: if isAuthenticated() && 
                      request.auth.uid == request.resource.data.userId;
      // SECURE: Only allow updates if the document's userId matches auth.uid
      allow update: if isAuthenticated() && 
                      request.auth.uid == resource.data.userId;
      allow delete: if isAdmin();
    }

    // App settings - only admins can access
    match /settings/{settingId} {
      allow read, write: if isAdmin();
    }

    // Public settings that users can read
    match /publicSettings/{settingId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Notifications - users see only their own, admins see all
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && 
                    (request.auth.uid == resource.data.targetUserId || isAdmin());
      allow write: if isAdmin();
    }

    // Global notifications (system-wide) - read-only for users
    match /globalNotifications/{notificationId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Admin-only collections
    match /analytics/{docId} {
      allow read, write: if isAdmin();
    }

    match /systemLogs/{logId} {
      allow read, write: if isAdmin();
    }

    // Default deny all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
